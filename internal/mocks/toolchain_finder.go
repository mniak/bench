// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mniak/bench/domain (interfaces: ToolchainFinder)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/mniak/bench/domain"
)

// MockToolchainFinder is a mock of ToolchainFinder interface.
type MockToolchainFinder struct {
	ctrl     *gomock.Controller
	recorder *MockToolchainFinderMockRecorder
}

// MockToolchainFinderMockRecorder is the mock recorder for MockToolchainFinder.
type MockToolchainFinderMockRecorder struct {
	mock *MockToolchainFinder
}

// NewMockToolchainFinder creates a new mock instance.
func NewMockToolchainFinder(ctrl *gomock.Controller) *MockToolchainFinder {
	mock := &MockToolchainFinder{ctrl: ctrl}
	mock.recorder = &MockToolchainFinderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockToolchainFinder) EXPECT() *MockToolchainFinderMockRecorder {
	return m.recorder
}

// Produce mocks base method.
func (m *MockToolchainFinder) Produce(arg0 string) (domain.Toolchain, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Produce", arg0)
	ret0, _ := ret[0].(domain.Toolchain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Produce indicates an expected call of Produce.
func (mr *MockToolchainFinderMockRecorder) Produce(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Produce", reflect.TypeOf((*MockToolchainFinder)(nil).Produce), arg0)
}
